/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.backup;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Collections;
import javax.swing.SwingUtilities;

/**
 *
 * @author haywoosd
 */
public class AutoBackupSelectPanel extends javax.swing.JPanel {

    /**
     * Creates new form AutoBackupSelectPanel
     */
    String[] fileNames;
    private File selectedFile;
    private final File backupFile;
    File[] longTermFileList;

    public AutoBackupSelectPanel(File backupFile, File longTermBackups) {
        selectedFile = null;
        this.backupFile = backupFile;
        longTermFileList = longTermBackups.listFiles();

        SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yy HH:mm");

        if (backupFile.exists()) {
            fileNames = new String[longTermFileList.length + 1];
            fileNames[0] = sdf.format(backupFile.lastModified()) + " (Latest)";
            for (int i = 0; i < longTermFileList.length; i++) {
                String tempName = longTermFileList[i].getName();
                fileNames[i + 1] = sdf.format(Long.parseLong(tempName.substring(11, tempName.length() - 4)));
            }
        } else {
            fileNames = new String[longTermFileList.length];
            for (int i = 0; i < longTermFileList.length; i++) {
                String tempName = longTermFileList[i].getName();
                fileNames[i] = sdf.format(Long.parseLong(tempName.substring(11, tempName.length() - 4)));
            }
        }

        Arrays.sort(fileNames);
        Collections.reverse(Arrays.asList(fileNames));
        Arrays.sort(longTermFileList);
        Collections.reverse(Arrays.asList(longTermFileList));
        initComponents();
    }

    public File getSelectedFile() {
        return selectedFile;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        fileSelectBox = new javax.swing.JComboBox(fileNames);
        selectButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Which backup would you like to load?");

        selectButton.setText("Select");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fileSelectBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(selectButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectButton)
                    .addComponent(fileSelectBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        if (backupFile.exists()) {
            if (fileSelectBox.getSelectedIndex() == 0) {
                selectedFile = backupFile;
            } else {
                selectedFile = longTermFileList[fileSelectBox.getSelectedIndex() - 1];
            }
        } else {
            selectedFile = longTermFileList[fileSelectBox.getSelectedIndex()];
        }
        SwingUtilities.getRoot(this).setVisible(false);
    }//GEN-LAST:event_selectButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox fileSelectBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton selectButton;
    // End of variables declaration//GEN-END:variables
}
